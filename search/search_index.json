{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Model-Based System Engineering Concept","text":"<p>This repository contains a concept flow for doing model-based system engineering.</p> <ul> <li>Documentation Page</li> </ul>"},{"location":"Let%27s%20talk%20about%20requirements/","title":"Let's talk about requirements","text":"<p>\"Statements that describe what a product or system needs to do or achieve to meet the needs of stakeholders.\"</p>"},{"location":"Let%27s%20talk%20about%20requirements/#development-driven-by-product-or-customer","title":"Development driven by product or customer?","text":"<p>The first step for every project is to collect inputs from the stakeholders of the project about what they expect from the product. This customer-driven development helps to align with customer goals, increasing the likelihood of adoption and satisfaction and minimises the risk of wasted development effort on unwanted or irrelevant features. </p> <p>Product-driven development focuses on creating a product based on the vision of the development team or organisation, rather than strictly adhering to customer-defined requirements. It emphasises innovation, creativity, and an understanding of future market trends to deliver a product.</p> <p>When a new technology emerges, it could be that the use case and its market not entirely clear. The development usually shifts into the product-driven direction and the product is released to the market to \"find its place\". When the product's customer base is identified, then the development shifts towards the customer-driven direction.</p>"},{"location":"Let%27s%20talk%20about%20requirements/#the-only-constant-in-life-is-change","title":"The only constant in life is change","text":"<p>Despite every effort of gathering the most detailed requirements, they will change over time as the customer has more time to interact with the product or the market dynamic changes. Technological advances and regulatory changes are also big effect in requirement changes. The rule of thumb is around 10% of the requirements are changed every month.</p>"},{"location":"Let%27s%20talk%20about%20requirements/#no-plan-survives-first-contact-with-the-enemy","title":"No plan survives first contact with the enemy","text":"<p>One way to address the risk of following a plan based on an outdated set of requirements is to gather feedback on the product and design ideas as early as possible. The development process should support the rapid creation of representative prototypes to showcase the development team's ideas and collect feedback from customers.</p>"},{"location":"What%20is%20Model-Based%20System%20Engineering/","title":"What is Model Based System Engineering","text":"<p>As we have discussed in the Let's talk about requirements section, the development process should support the rapid creation of representative prototypes to showcase the development team's ideas.</p> <p>Products can contain multiple complex systems with mechanical, mechatronics, hardware, and software components. These alone could be hard to develop and the integration of them into one system is exponentially harder. </p>"},{"location":"What%20is%20Model-Based%20System%20Engineering/#how-to-eat-an-elephant","title":"How to eat an elephant?","text":"<p>The best way to tackle with a big problem is to chunk it up into reasonable sizes. But how do you divide the problem and what is a reasonable size?</p> <p>One approach is to define each module in high detail and integrate them from the bottom-up. This method is commonly used in waterfall development processes and offers the advantage of easier test case definition for individual interfaces and functions. However, when a large number of system elements exist at the same level and the system as a whole does not function until the final module is added, system-level functionality cannot be observed during partial integration. This leads to longer development times due to the extended period required to reach system-level testing.</p> <p>{loading=lazy}</p> <p>LEGO instruction</p> <p>However, we can approach this issue similarly to how we draw a picture. We start by loosely sketching the main elements, ensuring their proportions, positions, and spacing align with our vision of what the picture should represent. Once we are satisfied with the basic sketch, we add more details to better depict the elements. If necessary, we erase parts of the sketch and redraw them, incorporating the feedback we\u2019ve gathered. This process is repeated until we reach the final level of detail in our drawing.</p> <p>{loading=lazy}</p> <p>how to draw a cat</p> <p>In product development terms, the process starts with system elements related to the overarching framework, which are generally aligned with the mission or users' vision. It continues with system elements that perform core or more detailed functions and ends with system elements handling even finer tasks, such as acquiring data from sensors and issuing commands to actuators. The disadvantage of this approach is that it requires many mock entities for the undefined system elements. The advantage, however, is the early availability of a system skeleton, which makes it easier to detect and locate remaining anomalies. Same way how the sketch of our drawing helped to gather feedback.</p>"},{"location":"What%20is%20Model-Based%20System%20Engineering/#models-the-sketches-of-systems","title":"Models - the sketches of systems","text":"<p>A system can be understood as consisting of three things:</p> <ul> <li>goal or purpose</li> <li>interconnections</li> <li>elements</li> </ul> <p>\"Sketching up\" a system starts from the mission point of view and the sketch should represent the elements and their interconnections so that we can evaluate if the system achieves its purpose. There are standards like SysML that help to standardise the visualisation of a system with diagrams.</p> <p>{loading=lazy}</p> <p>NASA mission chart</p> <p>{loading=lazy}</p> <p>data flow in satellite mission</p> <p>However, what works on paper doesn't always work in the field. The models have to be executed to gather verification and validation feedback for the design. This is where simulation comes into the picture. Models usually executed in simulated environment of the plant and the results are evaluated in the context of the fidelity of the simulation.</p> <p>{loading=lazy}</p> <p>simulation fidelity in design cycle</p> <p>Using models of the system with simulation helps to achieve the iterative approach we can do with top-down integration, before we write a detailed specification for the system elements and their intercommunication. This approach is often referred to as model-driven development (MDD).</p> <p>{loading=lazy}</p> <p>vehicle model in Simulink</p> <p>{loading=lazy}</p> <p>shifting logic in Simulink</p>"},{"location":"What%20is%20Model-Based%20System%20Engineering/#what-do-we-get-in-the-end","title":"What do we get in the end?","text":"<p>No plan survives first contact with the enemy and the final implementation will be different anyway. So why bother with MDD?</p> <p>In the end, we could get more out from model-based system engineering than fancy diagrams. The same way as a blueprint for a mechanical part defines the specification on what component we need, the model help us to write specification for our system components.</p> <p>Keeping the analogy of a mechanical part's blueprint, using 3D CAD and FEM models helped engineers verify and validate their design decision before it went to the implementation phase. The same way a system model can help with system architectural and logical decisions via evaluating them in simulation. Reducing the cost of mistakes significantly, and decreasing development time.</p> <p>Some tools, like Simulink, also offer code generation features. Meaning that for example the C/C++ the control algorithm can be generated from the model of the algorithm, keeping the model and the implementation tightly linked.</p> <p>The created simulations can be also reused on the realised system to verify and validate the implementation.</p>"}]}